#user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
}

http {

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	#default_type application/octet-stream;

	include mime.types;

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	gzip on;
	gzip_comp_level 3;
	gzip_types text/css;
	gzip_types text/javascript;

	fastcgi_cache_path /tmp/nginx_cache levels=1:2 keys_zone=MY_CACHE:100m inactive=10m;
	fastcgi_cache_key "$scheme$request_method$host$request_uri";

	#server {
	#	listen 80;
	#	server_name localhost;
	#	root /home/brian/Desktop/nginx;
	#	index index.html;

	#	set $name 'brian';

	#	try_files $uri /exact @text;
		
	#	location @text {
	#		return 200 "text";
	#	}

	#	location /img/nas.png {
			
	#	}

	#	location ~* \.(txt|css|js|jpg|png) {
	#		access_log off;
	#		add_header Cache-Control public;
	#		add_header Pragma public;
	#		add_header Vary Accept-Encoding;
	#		expires 1M;
	#		return 200 "exact";
       # }

	#	location = /requirements.txt {
	#		access_log off;
	#		add_header Cache-Control public;
	#		add_header Pragma public;
	#		add_header Vary Accept-Encoding;
	#		expires 1M;
			
       # }
		
	#	location ^~ /redirect {
         #               return 307 /text;
          #      }

	#	location ~*/Greet[A-Z]{
         #               return 200 "case insensitive regex";
          #      }

	#	rewrite /rewrite /text last;
	#	rewrite /text /exact;		

	#	location /inspect {
	#		return 200 "$host\n$uri\n$args";
	#	}
		
#	}
	
	server {
	    listen 80;
	    server_name localhost;

	    location = /favicon.ico {
		 access_log off; log_not_found off;
	     }
	    location /static {
	        alias /home/staticdir/static;
	    }

            location /media {
                 alias /home/staticdir/media;
             }

	    location / {
			proxy_set_header Host $http_host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_redirect off;
			proxy_buffering off;
			proxy_pass http://uvicorn;
		}
	}
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }
 upstream uvicorn {
    server localhost:8000;
  }
}
